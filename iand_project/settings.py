"""
Django settings for iand project.

Generated by 'django-admin startproject' using Django 5.0.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import pymysql
import os
import environ

# django database 구성 변경
pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

env = environ.Env(
    DEBUG=(bool, False)
)

environ.Env.read_env(
    env_file=os.path.join(BASE_DIR, 'secrets.config')
)

SECRET_KEY = env('DJANGO_SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

SITE_ID = 14

LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_ON_GET = True # 로그아웃 물어보는 페이지 안나옴

SESSION_COOKIE_AGE = 3600 # 로그인 세션 1시간 유지?
ACCOUNT_SESSION_REMEMBER = True # 브라우저를 닫으면 유저 로그아웃

# 회원가입 폼
# ACCOUNT_FORMS = {
#     'signup': 'accounts.forms.CustomSignupForm',
# }

# 소셜 계정으로 로그인 시 자동으로 사용자 계정을 생성할지
SOCIALACCOUNT_AUTO_SIGNUP = False
SOCIALACCOUNT_SIGNUP_REDIRECTION_URL = 'login'
SOCIALACCOUNT_FORMS = {
    # 소셜계정 가입 후 추가 폼
    'signup': 'accounts.forms.CustomSocialSignupForm',
}

SOCIALACCOUNT_EMAIL_REQUIRED = True

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'iand_project',
    'accounts',
    'main',
    'playground',
    'community',
    'mypage',
    
    # allauth
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    
    # login-api
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.kakao',
    'allauth.socialaccount.providers.naver',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware',
]

ROOT_URLCONF = 'iand_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [f'{BASE_DIR}/templates', f'{BASE_DIR}/main/templates',],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'community.context_processors.menu_links',
            ],
        },
    },
]

SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": [
            "profile",
            "email",
        ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
        "APP": {
            "client_id": env('GOOGLE_OAUTH_CLIENT_ID'),
            "secret": env('GOOGLE_OAUTH_SECRET'),
            'key': '' 
        },
    },
    
    "kakao": {
        # "SCOPE": [
        #     "profile",
        #     "email",
        # ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
        "APP": {
            "client_id": env('KAKAO_OAUTH_CLIENT_ID')
        },
    },
    
    "naver": {
        # "SCOPE": [
        #     "profile",
        #     "email",
        # ],
        "AUTH_PARAMS": {
            "access_type": "online",
        },
        "APP": {
            "client_id": env('NAVER_OAUTH_CLIENT_ID'),
             "secret": env('NAVER_OAUTH_SECRET')
        },
    },
}



WSGI_APPLICATION = 'iand_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": env('DATABASE_ENGINE'),
        "NAME": env('DATABASE_NAME'), 
        "USER" : env('DATABASE_USER'),
        "PASSWORD" : env('DATABASE_PASSWORD'),
        "HOST" : env('DATABASE_HOST'),
        "PORT" : env('DATABASE_PORT'),
        "OPTIONS" : {
            'init_command' : env('DATABASE_INIT_COMMAND')
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'ko-kr'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
    BASE_DIR / 'community' / 'static',
    BASE_DIR / 'playground' / 'static', 
    BASE_DIR / 'mypage' / 'static',
    BASE_DIR / 'main' / 'static',
    BASE_DIR / 'accounts' / 'static',
    ]

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

MEDIA_URL = "/media/"
MEDIA_ROOT = BASE_DIR / "media"

AUTH_USER_MODEL = 'accounts.User'
